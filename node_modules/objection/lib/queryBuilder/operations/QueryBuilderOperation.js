"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var QueryBuilderOperation = function () {

  /**
   * @param {knex} knex
   * @param {string} name
   * @param {Object} opt
   */
  function QueryBuilderOperation(name, opt) {
    (0, _classCallCheck3.default)(this, QueryBuilderOperation);

    this.name = name;
    this.opt = opt || {};
    this.isWriteOperation = false;
  }

  /**
   * @param {QueryBuilder} builder
   * @param {Array.<*>} args
   * @returns {boolean}
   */


  QueryBuilderOperation.prototype.call = function call(builder, args) {
    return true;
  };

  /**
   * @param {QueryBuilder} builder
   * @param {*} result
   * @returns {Promise|*}
   */


  QueryBuilderOperation.prototype.onBefore = function onBefore(builder, result) {};

  /**
   * @returns {boolean}
   */


  QueryBuilderOperation.prototype.hasOnBefore = function hasOnBefore() {
    return this.onBefore !== QueryBuilderOperation.prototype.onBefore;
  };

  /**
   * @param {QueryBuilder} builder
   * @param {*} result
   * @returns {Promise|*}
   */


  QueryBuilderOperation.prototype.onBeforeInternal = function onBeforeInternal(builder, result) {};

  /**
   * @returns {boolean}
   */


  QueryBuilderOperation.prototype.hasOnBeforeInternal = function hasOnBeforeInternal() {
    return this.onBeforeInternal !== QueryBuilderOperation.prototype.onBeforeInternal;
  };

  /**
   * @param {QueryBuilder} builder
   */


  QueryBuilderOperation.prototype.onBeforeBuild = function onBeforeBuild(builder) {};

  /**
   * @returns {boolean}
   */


  QueryBuilderOperation.prototype.hasOnBeforeBuild = function hasOnBeforeBuild() {
    return this.onBeforeBuild !== QueryBuilderOperation.prototype.onBeforeBuild;
  };

  /**
   * @param {QueryBuilder} knexBuilder
   * @param {QueryBuilder} builder
   */


  QueryBuilderOperation.prototype.onBuild = function onBuild(knexBuilder, builder) {};

  /**
   * @returns {boolean}
   */


  QueryBuilderOperation.prototype.hasOnBuild = function hasOnBuild() {
    return this.onBuild !== QueryBuilderOperation.prototype.onBuild;
  };

  /**
   * @param {QueryBuilder} builder
   * @param {*} result
   * @returns {*}
   */


  QueryBuilderOperation.prototype.onRawResult = function onRawResult(builder, result) {
    return rows;
  };

  /**
   * @returns {boolean}
   */


  QueryBuilderOperation.prototype.hasOnRawResult = function hasOnRawResult() {
    return this.onRawResult !== QueryBuilderOperation.prototype.onRawResult;
  };

  /**
   * @param {QueryBuilder} builder
   * @param {*} result
   * @returns {Promise|*}
   */


  QueryBuilderOperation.prototype.onAfterQuery = function onAfterQuery(builder, result) {};

  /**
   * @returns {boolean}
   */


  QueryBuilderOperation.prototype.hasOnAfterQuery = function hasOnAfterQuery() {
    return this.onAfterQuery !== QueryBuilderOperation.prototype.onAfterQuery;
  };

  /**
   * @param {QueryBuilder} builder
   * @param {*} result
   * @returns {Promise|*}
   */


  QueryBuilderOperation.prototype.onAfterInternal = function onAfterInternal(builder, result) {};

  /**
   * @returns {boolean}
   */


  QueryBuilderOperation.prototype.hasOnAfterInternal = function hasOnAfterInternal() {
    return this.onAfterInternal !== QueryBuilderOperation.prototype.onAfterInternal;
  };

  /**
   * @param {QueryBuilder} builder
   * @param {*} result
   * @returns {Promise|*}
   */


  QueryBuilderOperation.prototype.onAfter = function onAfter(builder, result) {};

  /**
   * @returns {boolean}
   */


  QueryBuilderOperation.prototype.hasOnAfter = function hasOnAfter() {
    return this.onAfter !== QueryBuilderOperation.prototype.onAfter;
  };

  /**
   * @param {QueryBuilder} builder
   * @returns {QueryBuilder}
   */


  QueryBuilderOperation.prototype.queryExecutor = function queryExecutor(builder) {};

  /**
   * @returns {boolean}
   */


  QueryBuilderOperation.prototype.hasQueryExecutor = function hasQueryExecutor() {
    return this.queryExecutor !== QueryBuilderOperation.prototype.queryExecutor;
  };

  return QueryBuilderOperation;
}();

exports.default = QueryBuilderOperation;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlF1ZXJ5QnVpbGRlck9wZXJhdGlvbi5qcyJdLCJuYW1lcyI6WyJRdWVyeUJ1aWxkZXJPcGVyYXRpb24iLCJuYW1lIiwib3B0IiwiaXNXcml0ZU9wZXJhdGlvbiIsImNhbGwiLCJidWlsZGVyIiwiYXJncyIsIm9uQmVmb3JlIiwicmVzdWx0IiwiaGFzT25CZWZvcmUiLCJwcm90b3R5cGUiLCJvbkJlZm9yZUludGVybmFsIiwiaGFzT25CZWZvcmVJbnRlcm5hbCIsIm9uQmVmb3JlQnVpbGQiLCJoYXNPbkJlZm9yZUJ1aWxkIiwib25CdWlsZCIsImtuZXhCdWlsZGVyIiwiaGFzT25CdWlsZCIsIm9uUmF3UmVzdWx0Iiwicm93cyIsImhhc09uUmF3UmVzdWx0Iiwib25BZnRlclF1ZXJ5IiwiaGFzT25BZnRlclF1ZXJ5Iiwib25BZnRlckludGVybmFsIiwiaGFzT25BZnRlckludGVybmFsIiwib25BZnRlciIsImhhc09uQWZ0ZXIiLCJxdWVyeUV4ZWN1dG9yIiwiaGFzUXVlcnlFeGVjdXRvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztJQUFxQkEscUI7O0FBRW5COzs7OztBQUtBLGlDQUFZQyxJQUFaLEVBQWtCQyxHQUFsQixFQUF1QjtBQUFBOztBQUNyQixTQUFLRCxJQUFMLEdBQVlBLElBQVo7QUFDQSxTQUFLQyxHQUFMLEdBQVdBLE9BQU8sRUFBbEI7QUFDQSxTQUFLQyxnQkFBTCxHQUF3QixLQUF4QjtBQUNEOztBQUVEOzs7Ozs7O2tDQUtBQyxJLGlCQUFLQyxPLEVBQVNDLEksRUFBTTtBQUNsQixXQUFPLElBQVA7QUFDRCxHOztBQUVEOzs7Ozs7O2tDQUtBQyxRLHFCQUFTRixPLEVBQVNHLE0sRUFBUSxDQUFFLEM7O0FBRTVCOzs7OztrQ0FHQUMsVywwQkFBYztBQUNaLFdBQU8sS0FBS0YsUUFBTCxLQUFrQlAsc0JBQXNCVSxTQUF0QixDQUFnQ0gsUUFBekQ7QUFDRCxHOztBQUVEOzs7Ozs7O2tDQUtBSSxnQiw2QkFBaUJOLE8sRUFBU0csTSxFQUFRLENBQUUsQzs7QUFFcEM7Ozs7O2tDQUdBSSxtQixrQ0FBc0I7QUFDcEIsV0FBTyxLQUFLRCxnQkFBTCxLQUEwQlgsc0JBQXNCVSxTQUF0QixDQUFnQ0MsZ0JBQWpFO0FBQ0QsRzs7QUFFRDs7Ozs7a0NBR0FFLGEsMEJBQWNSLE8sRUFBUyxDQUFFLEM7O0FBRXpCOzs7OztrQ0FHQVMsZ0IsK0JBQW1CO0FBQ2pCLFdBQU8sS0FBS0QsYUFBTCxLQUF1QmIsc0JBQXNCVSxTQUF0QixDQUFnQ0csYUFBOUQ7QUFDRCxHOztBQUVEOzs7Ozs7a0NBSUFFLE8sb0JBQVFDLFcsRUFBYVgsTyxFQUFTLENBQUUsQzs7QUFFaEM7Ozs7O2tDQUdBWSxVLHlCQUFhO0FBQ1gsV0FBTyxLQUFLRixPQUFMLEtBQWlCZixzQkFBc0JVLFNBQXRCLENBQWdDSyxPQUF4RDtBQUNELEc7O0FBRUQ7Ozs7Ozs7a0NBS0FHLFcsd0JBQVliLE8sRUFBU0csTSxFQUFRO0FBQzNCLFdBQU9XLElBQVA7QUFDRCxHOztBQUVEOzs7OztrQ0FHQUMsYyw2QkFBaUI7QUFDZixXQUFPLEtBQUtGLFdBQUwsS0FBcUJsQixzQkFBc0JVLFNBQXRCLENBQWdDUSxXQUE1RDtBQUNELEc7O0FBRUQ7Ozs7Ozs7a0NBS0FHLFkseUJBQWFoQixPLEVBQVNHLE0sRUFBUSxDQUFFLEM7O0FBRWhDOzs7OztrQ0FHQWMsZSw4QkFBa0I7QUFDaEIsV0FBTyxLQUFLRCxZQUFMLEtBQXNCckIsc0JBQXNCVSxTQUF0QixDQUFnQ1csWUFBN0Q7QUFDRCxHOztBQUVEOzs7Ozs7O2tDQUtBRSxlLDRCQUFnQmxCLE8sRUFBU0csTSxFQUFRLENBQUUsQzs7QUFFbkM7Ozs7O2tDQUdBZ0Isa0IsaUNBQXFCO0FBQ25CLFdBQU8sS0FBS0QsZUFBTCxLQUF5QnZCLHNCQUFzQlUsU0FBdEIsQ0FBZ0NhLGVBQWhFO0FBQ0QsRzs7QUFFRDs7Ozs7OztrQ0FLQUUsTyxvQkFBUXBCLE8sRUFBU0csTSxFQUFRLENBQUUsQzs7QUFFM0I7Ozs7O2tDQUdBa0IsVSx5QkFBYTtBQUNYLFdBQU8sS0FBS0QsT0FBTCxLQUFpQnpCLHNCQUFzQlUsU0FBdEIsQ0FBZ0NlLE9BQXhEO0FBQ0QsRzs7QUFFRDs7Ozs7O2tDQUlBRSxhLDBCQUFjdEIsTyxFQUFTLENBQUUsQzs7QUFFekI7Ozs7O2tDQUdBdUIsZ0IsK0JBQW1CO0FBQ2pCLFdBQU8sS0FBS0QsYUFBTCxLQUF1QjNCLHNCQUFzQlUsU0FBdEIsQ0FBZ0NpQixhQUE5RDtBQUNELEc7Ozs7O2tCQWhKa0IzQixxQiIsImZpbGUiOiJRdWVyeUJ1aWxkZXJPcGVyYXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBRdWVyeUJ1aWxkZXJPcGVyYXRpb24ge1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2tuZXh9IGtuZXhcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdFxuICAgKi9cbiAgY29uc3RydWN0b3IobmFtZSwgb3B0KSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB0aGlzLm9wdCA9IG9wdCB8fCB7fTtcbiAgICB0aGlzLmlzV3JpdGVPcGVyYXRpb24gPSBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1F1ZXJ5QnVpbGRlcn0gYnVpbGRlclxuICAgKiBAcGFyYW0ge0FycmF5LjwqPn0gYXJnc1xuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICovXG4gIGNhbGwoYnVpbGRlciwgYXJncykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7UXVlcnlCdWlsZGVyfSBidWlsZGVyXG4gICAqIEBwYXJhbSB7Kn0gcmVzdWx0XG4gICAqIEByZXR1cm5zIHtQcm9taXNlfCp9XG4gICAqL1xuICBvbkJlZm9yZShidWlsZGVyLCByZXN1bHQpIHt9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgaGFzT25CZWZvcmUoKSB7XG4gICAgcmV0dXJuIHRoaXMub25CZWZvcmUgIT09IFF1ZXJ5QnVpbGRlck9wZXJhdGlvbi5wcm90b3R5cGUub25CZWZvcmU7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtRdWVyeUJ1aWxkZXJ9IGJ1aWxkZXJcbiAgICogQHBhcmFtIHsqfSByZXN1bHRcbiAgICogQHJldHVybnMge1Byb21pc2V8Kn1cbiAgICovXG4gIG9uQmVmb3JlSW50ZXJuYWwoYnVpbGRlciwgcmVzdWx0KSB7fVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICovXG4gIGhhc09uQmVmb3JlSW50ZXJuYWwoKSB7XG4gICAgcmV0dXJuIHRoaXMub25CZWZvcmVJbnRlcm5hbCAhPT0gUXVlcnlCdWlsZGVyT3BlcmF0aW9uLnByb3RvdHlwZS5vbkJlZm9yZUludGVybmFsO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7UXVlcnlCdWlsZGVyfSBidWlsZGVyXG4gICAqL1xuICBvbkJlZm9yZUJ1aWxkKGJ1aWxkZXIpIHt9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgaGFzT25CZWZvcmVCdWlsZCgpIHtcbiAgICByZXR1cm4gdGhpcy5vbkJlZm9yZUJ1aWxkICE9PSBRdWVyeUJ1aWxkZXJPcGVyYXRpb24ucHJvdG90eXBlLm9uQmVmb3JlQnVpbGQ7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtRdWVyeUJ1aWxkZXJ9IGtuZXhCdWlsZGVyXG4gICAqIEBwYXJhbSB7UXVlcnlCdWlsZGVyfSBidWlsZGVyXG4gICAqL1xuICBvbkJ1aWxkKGtuZXhCdWlsZGVyLCBidWlsZGVyKSB7fVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICovXG4gIGhhc09uQnVpbGQoKSB7XG4gICAgcmV0dXJuIHRoaXMub25CdWlsZCAhPT0gUXVlcnlCdWlsZGVyT3BlcmF0aW9uLnByb3RvdHlwZS5vbkJ1aWxkO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7UXVlcnlCdWlsZGVyfSBidWlsZGVyXG4gICAqIEBwYXJhbSB7Kn0gcmVzdWx0XG4gICAqIEByZXR1cm5zIHsqfVxuICAgKi9cbiAgb25SYXdSZXN1bHQoYnVpbGRlciwgcmVzdWx0KSB7XG4gICAgcmV0dXJuIHJvd3M7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBoYXNPblJhd1Jlc3VsdCgpIHtcbiAgICByZXR1cm4gdGhpcy5vblJhd1Jlc3VsdCAhPT0gUXVlcnlCdWlsZGVyT3BlcmF0aW9uLnByb3RvdHlwZS5vblJhd1Jlc3VsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1F1ZXJ5QnVpbGRlcn0gYnVpbGRlclxuICAgKiBAcGFyYW0geyp9IHJlc3VsdFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZXwqfVxuICAgKi9cbiAgb25BZnRlclF1ZXJ5KGJ1aWxkZXIsIHJlc3VsdCkge31cblxuICAvKipcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBoYXNPbkFmdGVyUXVlcnkoKSB7XG4gICAgcmV0dXJuIHRoaXMub25BZnRlclF1ZXJ5ICE9PSBRdWVyeUJ1aWxkZXJPcGVyYXRpb24ucHJvdG90eXBlLm9uQWZ0ZXJRdWVyeTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1F1ZXJ5QnVpbGRlcn0gYnVpbGRlclxuICAgKiBAcGFyYW0geyp9IHJlc3VsdFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZXwqfVxuICAgKi9cbiAgb25BZnRlckludGVybmFsKGJ1aWxkZXIsIHJlc3VsdCkge31cblxuICAvKipcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBoYXNPbkFmdGVySW50ZXJuYWwoKSB7XG4gICAgcmV0dXJuIHRoaXMub25BZnRlckludGVybmFsICE9PSBRdWVyeUJ1aWxkZXJPcGVyYXRpb24ucHJvdG90eXBlLm9uQWZ0ZXJJbnRlcm5hbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1F1ZXJ5QnVpbGRlcn0gYnVpbGRlclxuICAgKiBAcGFyYW0geyp9IHJlc3VsdFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZXwqfVxuICAgKi9cbiAgb25BZnRlcihidWlsZGVyLCByZXN1bHQpIHt9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgaGFzT25BZnRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5vbkFmdGVyICE9PSBRdWVyeUJ1aWxkZXJPcGVyYXRpb24ucHJvdG90eXBlLm9uQWZ0ZXI7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtRdWVyeUJ1aWxkZXJ9IGJ1aWxkZXJcbiAgICogQHJldHVybnMge1F1ZXJ5QnVpbGRlcn1cbiAgICovXG4gIHF1ZXJ5RXhlY3V0b3IoYnVpbGRlcikge31cblxuICAvKipcbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBoYXNRdWVyeUV4ZWN1dG9yKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5RXhlY3V0b3IgIT09IFF1ZXJ5QnVpbGRlck9wZXJhdGlvbi5wcm90b3R5cGUucXVlcnlFeGVjdXRvcjtcbiAgfVxufSJdfQ==