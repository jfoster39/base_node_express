'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _DelegateOperation2 = require('./DelegateOperation');

var _DelegateOperation3 = _interopRequireDefault(_DelegateOperation2);

var _promiseUtils = require('../../utils/promiseUtils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var UpdateAndFetchOperation = function (_DelegateOperation) {
  (0, _inherits3.default)(UpdateAndFetchOperation, _DelegateOperation);

  function UpdateAndFetchOperation(name, opt) {
    (0, _classCallCheck3.default)(this, UpdateAndFetchOperation);

    var _this = (0, _possibleConstructorReturn3.default)(this, _DelegateOperation.call(this, name, opt));

    _this.id = null;
    return _this;
  }

  UpdateAndFetchOperation.prototype.call = function call(builder, args) {
    this.id = args[0];
    return this.delegate.call(builder, args.slice(1));
  };

  UpdateAndFetchOperation.prototype.onBeforeBuild = function onBeforeBuild(builder) {
    _DelegateOperation.prototype.onBeforeBuild.call(this, builder);
    builder.whereComposite(builder.modelClass().getFullIdColumn(), this.id);
  };

  UpdateAndFetchOperation.prototype.onAfterInternal = function onAfterInternal(builder, numUpdated) {
    var _this2 = this;

    if (numUpdated == 0) {
      // If nothing was updated, we should fetch nothing.
      return (0, _promiseUtils.afterReturn)(_DelegateOperation.prototype.onAfterInternal.call(this, builder, numUpdated), undefined);
    }

    return builder.modelClass().query().childQueryOf(builder).whereComposite(builder.modelClass().getFullIdColumn(), this.id).first().then(function (fetched) {
      var retVal = null;

      if (fetched) {
        _this2.model.$set(fetched);
        retVal = _this2.model;
      }

      return (0, _promiseUtils.afterReturn)(_DelegateOperation.prototype.onAfterInternal.call(_this2, builder, numUpdated), retVal);
    });
  };

  (0, _createClass3.default)(UpdateAndFetchOperation, [{
    key: 'model',
    get: function get() {
      return this.delegate.model;
    }
  }]);
  return UpdateAndFetchOperation;
}(_DelegateOperation3.default);

exports.default = UpdateAndFetchOperation;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVwZGF0ZUFuZEZldGNoT3BlcmF0aW9uLmpzIl0sIm5hbWVzIjpbIlVwZGF0ZUFuZEZldGNoT3BlcmF0aW9uIiwibmFtZSIsIm9wdCIsImlkIiwiY2FsbCIsImJ1aWxkZXIiLCJhcmdzIiwiZGVsZWdhdGUiLCJzbGljZSIsIm9uQmVmb3JlQnVpbGQiLCJ3aGVyZUNvbXBvc2l0ZSIsIm1vZGVsQ2xhc3MiLCJnZXRGdWxsSWRDb2x1bW4iLCJvbkFmdGVySW50ZXJuYWwiLCJudW1VcGRhdGVkIiwidW5kZWZpbmVkIiwicXVlcnkiLCJjaGlsZFF1ZXJ5T2YiLCJmaXJzdCIsInRoZW4iLCJyZXRWYWwiLCJmZXRjaGVkIiwibW9kZWwiLCIkc2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7SUFFcUJBLHVCOzs7QUFFbkIsbUNBQVlDLElBQVosRUFBa0JDLEdBQWxCLEVBQXVCO0FBQUE7O0FBQUEsK0RBQ3JCLDhCQUFNRCxJQUFOLEVBQVlDLEdBQVosQ0FEcUI7O0FBRXJCLFVBQUtDLEVBQUwsR0FBVSxJQUFWO0FBRnFCO0FBR3RCOztvQ0FNREMsSSxpQkFBS0MsTyxFQUFTQyxJLEVBQU07QUFDbEIsU0FBS0gsRUFBTCxHQUFVRyxLQUFLLENBQUwsQ0FBVjtBQUNBLFdBQU8sS0FBS0MsUUFBTCxDQUFjSCxJQUFkLENBQW1CQyxPQUFuQixFQUE0QkMsS0FBS0UsS0FBTCxDQUFXLENBQVgsQ0FBNUIsQ0FBUDtBQUNELEc7O29DQUVEQyxhLDBCQUFjSixPLEVBQVM7QUFDckIsaUNBQU1JLGFBQU4sWUFBb0JKLE9BQXBCO0FBQ0FBLFlBQVFLLGNBQVIsQ0FBdUJMLFFBQVFNLFVBQVIsR0FBcUJDLGVBQXJCLEVBQXZCLEVBQStELEtBQUtULEVBQXBFO0FBQ0QsRzs7b0NBRURVLGUsNEJBQWdCUixPLEVBQVNTLFUsRUFBWTtBQUFBOztBQUNuQyxRQUFJQSxjQUFjLENBQWxCLEVBQXFCO0FBQ25CO0FBQ0EsYUFBTywrQkFBWSw2QkFBTUQsZUFBTixZQUFzQlIsT0FBdEIsRUFBK0JTLFVBQS9CLENBQVosRUFBd0RDLFNBQXhELENBQVA7QUFDRDs7QUFFRCxXQUFPVixRQUFRTSxVQUFSLEdBQ0pLLEtBREksR0FFSkMsWUFGSSxDQUVTWixPQUZULEVBR0pLLGNBSEksQ0FHV0wsUUFBUU0sVUFBUixHQUFxQkMsZUFBckIsRUFIWCxFQUdtRCxLQUFLVCxFQUh4RCxFQUlKZSxLQUpJLEdBS0pDLElBTEksQ0FLQyxtQkFBVztBQUNmLFVBQUlDLFNBQVMsSUFBYjs7QUFFQSxVQUFJQyxPQUFKLEVBQWE7QUFDWCxlQUFLQyxLQUFMLENBQVdDLElBQVgsQ0FBZ0JGLE9BQWhCO0FBQ0FELGlCQUFTLE9BQUtFLEtBQWQ7QUFDRDs7QUFFRCxhQUFPLCtCQUFZLDZCQUFNVCxlQUFOLGNBQXNCUixPQUF0QixFQUErQlMsVUFBL0IsQ0FBWixFQUF3RE0sTUFBeEQsQ0FBUDtBQUNELEtBZEksQ0FBUDtBQWVELEc7Ozs7d0JBbkNXO0FBQ1YsYUFBTyxLQUFLYixRQUFMLENBQWNlLEtBQXJCO0FBQ0Q7Ozs7O2tCQVRrQnRCLHVCIiwiZmlsZSI6IlVwZGF0ZUFuZEZldGNoT3BlcmF0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERlbGVnYXRlT3BlcmF0aW9uIGZyb20gJy4vRGVsZWdhdGVPcGVyYXRpb24nO1xuaW1wb3J0IHthZnRlclJldHVybn0gZnJvbSAnLi4vLi4vdXRpbHMvcHJvbWlzZVV0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXBkYXRlQW5kRmV0Y2hPcGVyYXRpb24gZXh0ZW5kcyBEZWxlZ2F0ZU9wZXJhdGlvbiB7XG5cbiAgY29uc3RydWN0b3IobmFtZSwgb3B0KSB7XG4gICAgc3VwZXIobmFtZSwgb3B0KTtcbiAgICB0aGlzLmlkID0gbnVsbDtcbiAgfVxuXG4gIGdldCBtb2RlbCgpIHtcbiAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZS5tb2RlbDtcbiAgfVxuXG4gIGNhbGwoYnVpbGRlciwgYXJncykge1xuICAgIHRoaXMuaWQgPSBhcmdzWzBdO1xuICAgIHJldHVybiB0aGlzLmRlbGVnYXRlLmNhbGwoYnVpbGRlciwgYXJncy5zbGljZSgxKSk7XG4gIH1cblxuICBvbkJlZm9yZUJ1aWxkKGJ1aWxkZXIpIHtcbiAgICBzdXBlci5vbkJlZm9yZUJ1aWxkKGJ1aWxkZXIpO1xuICAgIGJ1aWxkZXIud2hlcmVDb21wb3NpdGUoYnVpbGRlci5tb2RlbENsYXNzKCkuZ2V0RnVsbElkQ29sdW1uKCksIHRoaXMuaWQpO1xuICB9XG5cbiAgb25BZnRlckludGVybmFsKGJ1aWxkZXIsIG51bVVwZGF0ZWQpIHtcbiAgICBpZiAobnVtVXBkYXRlZCA9PSAwKSB7XG4gICAgICAvLyBJZiBub3RoaW5nIHdhcyB1cGRhdGVkLCB3ZSBzaG91bGQgZmV0Y2ggbm90aGluZy5cbiAgICAgIHJldHVybiBhZnRlclJldHVybihzdXBlci5vbkFmdGVySW50ZXJuYWwoYnVpbGRlciwgbnVtVXBkYXRlZCksIHVuZGVmaW5lZCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1aWxkZXIubW9kZWxDbGFzcygpXG4gICAgICAucXVlcnkoKVxuICAgICAgLmNoaWxkUXVlcnlPZihidWlsZGVyKVxuICAgICAgLndoZXJlQ29tcG9zaXRlKGJ1aWxkZXIubW9kZWxDbGFzcygpLmdldEZ1bGxJZENvbHVtbigpLCB0aGlzLmlkKVxuICAgICAgLmZpcnN0KClcbiAgICAgIC50aGVuKGZldGNoZWQgPT4ge1xuICAgICAgICBsZXQgcmV0VmFsID0gbnVsbDtcblxuICAgICAgICBpZiAoZmV0Y2hlZCkge1xuICAgICAgICAgIHRoaXMubW9kZWwuJHNldChmZXRjaGVkKTtcbiAgICAgICAgICByZXRWYWwgPSB0aGlzLm1vZGVsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGFmdGVyUmV0dXJuKHN1cGVyLm9uQWZ0ZXJJbnRlcm5hbChidWlsZGVyLCBudW1VcGRhdGVkKSwgcmV0VmFsKTtcbiAgICAgIH0pO1xuICB9XG59XG4iXX0=