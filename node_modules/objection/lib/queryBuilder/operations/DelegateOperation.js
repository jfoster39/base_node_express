'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _QueryBuilderOperation = require('./QueryBuilderOperation');

var _QueryBuilderOperation2 = _interopRequireDefault(_QueryBuilderOperation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DelegateOperation = function (_QueryBuilderOperatio) {
  (0, _inherits3.default)(DelegateOperation, _QueryBuilderOperatio);

  function DelegateOperation(name, opt) {
    (0, _classCallCheck3.default)(this, DelegateOperation);

    var _this = (0, _possibleConstructorReturn3.default)(this, _QueryBuilderOperatio.call(this, name, opt));

    _this.delegate = opt.delegate;
    _this.isWriteOperation = _this.delegate.isWriteOperation;
    return _this;
  }

  DelegateOperation.prototype.call = function call(builder, args) {
    return this.delegate.call(builder, args);
  };

  DelegateOperation.prototype.onBefore = function onBefore(builder, result) {
    return this.delegate.onBefore(builder, result);
  };

  DelegateOperation.prototype.hasOnBefore = function hasOnBefore() {
    return this.onBefore !== DelegateOperation.prototype.onBefore || this.delegate.hasOnBefore();
  };

  DelegateOperation.prototype.onBeforeInternal = function onBeforeInternal(builder, result) {
    return this.delegate.onBeforeInternal(builder, result);
  };

  DelegateOperation.prototype.hasOnBeforeInternal = function hasOnBeforeInternal() {
    return this.onBeforeInternal !== DelegateOperation.prototype.onBeforeInternal || this.delegate.hasOnBeforeInternal();
  };

  DelegateOperation.prototype.onBeforeBuild = function onBeforeBuild(builder) {
    return this.delegate.onBeforeBuild(builder);
  };

  DelegateOperation.prototype.hasOnBeforeBuild = function hasOnBeforeBuild() {
    return this.onBeforeBuild !== DelegateOperation.prototype.onBeforeBuild || this.delegate.hasOnBeforeBuild();
  };

  DelegateOperation.prototype.onBuild = function onBuild(knexBuilder, builder) {
    return this.delegate.onBuild(knexBuilder, builder);
  };

  DelegateOperation.prototype.hasOnBuild = function hasOnBuild() {
    return this.onBuild !== DelegateOperation.prototype.onBuild || this.delegate.hasOnBuild();
  };

  DelegateOperation.prototype.onRawResult = function onRawResult(builder, result) {
    return this.delegate.onRawResult(builder, result);
  };

  DelegateOperation.prototype.hasOnRawResult = function hasOnRawResult() {
    return this.onRawResult !== DelegateOperation.prototype.onRawResult || this.delegate.hasOnRawResult();
  };

  DelegateOperation.prototype.onAfterQuery = function onAfterQuery(builder, result) {
    return this.delegate.onAfterQuery(builder, result);
  };

  DelegateOperation.prototype.hasOnAfterQuery = function hasOnAfterQuery() {
    return this.onAfterQuery !== DelegateOperation.prototype.onAfterQuery || this.delegate.hasOnAfterQuery();
  };

  DelegateOperation.prototype.onAfterInternal = function onAfterInternal(builder, result) {
    return this.delegate.onAfterInternal(builder, result);
  };

  DelegateOperation.prototype.hasOnAfterInternal = function hasOnAfterInternal() {
    return this.onAfterInternal !== DelegateOperation.prototype.onAfterInternal || this.delegate.hasOnAfterInternal();
  };

  DelegateOperation.prototype.onAfter = function onAfter(builder, result) {
    return this.delegate.onAfter(builder, result);
  };

  DelegateOperation.prototype.hasOnAfter = function hasOnAfter() {
    return this.onAfter !== DelegateOperation.prototype.onAfter || this.delegate.hasOnAfter();
  };

  DelegateOperation.prototype.queryExecutor = function queryExecutor(builder) {
    return this.delegate.queryExecutor(builder);
  };

  DelegateOperation.prototype.hasQueryExecutor = function hasQueryExecutor() {
    return this.queryExecutor !== DelegateOperation.prototype.queryExecutor || this.delegate.hasQueryExecutor();
  };

  return DelegateOperation;
}(_QueryBuilderOperation2.default);

exports.default = DelegateOperation;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlbGVnYXRlT3BlcmF0aW9uLmpzIl0sIm5hbWVzIjpbIkRlbGVnYXRlT3BlcmF0aW9uIiwibmFtZSIsIm9wdCIsImRlbGVnYXRlIiwiaXNXcml0ZU9wZXJhdGlvbiIsImNhbGwiLCJidWlsZGVyIiwiYXJncyIsIm9uQmVmb3JlIiwicmVzdWx0IiwiaGFzT25CZWZvcmUiLCJwcm90b3R5cGUiLCJvbkJlZm9yZUludGVybmFsIiwiaGFzT25CZWZvcmVJbnRlcm5hbCIsIm9uQmVmb3JlQnVpbGQiLCJoYXNPbkJlZm9yZUJ1aWxkIiwib25CdWlsZCIsImtuZXhCdWlsZGVyIiwiaGFzT25CdWlsZCIsIm9uUmF3UmVzdWx0IiwiaGFzT25SYXdSZXN1bHQiLCJvbkFmdGVyUXVlcnkiLCJoYXNPbkFmdGVyUXVlcnkiLCJvbkFmdGVySW50ZXJuYWwiLCJoYXNPbkFmdGVySW50ZXJuYWwiLCJvbkFmdGVyIiwiaGFzT25BZnRlciIsInF1ZXJ5RXhlY3V0b3IiLCJoYXNRdWVyeUV4ZWN1dG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7OztJQUVxQkEsaUI7OztBQUVuQiw2QkFBWUMsSUFBWixFQUFrQkMsR0FBbEIsRUFBdUI7QUFBQTs7QUFBQSwrREFDckIsaUNBQU1ELElBQU4sRUFBWUMsR0FBWixDQURxQjs7QUFHckIsVUFBS0MsUUFBTCxHQUFnQkQsSUFBSUMsUUFBcEI7QUFDQSxVQUFLQyxnQkFBTCxHQUF3QixNQUFLRCxRQUFMLENBQWNDLGdCQUF0QztBQUpxQjtBQUt0Qjs7OEJBRURDLEksaUJBQUtDLE8sRUFBU0MsSSxFQUFNO0FBQ2xCLFdBQU8sS0FBS0osUUFBTCxDQUFjRSxJQUFkLENBQW1CQyxPQUFuQixFQUE0QkMsSUFBNUIsQ0FBUDtBQUNELEc7OzhCQUVEQyxRLHFCQUFTRixPLEVBQVNHLE0sRUFBUTtBQUN4QixXQUFPLEtBQUtOLFFBQUwsQ0FBY0ssUUFBZCxDQUF1QkYsT0FBdkIsRUFBZ0NHLE1BQWhDLENBQVA7QUFD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QUFuRCxJQUFvRSxLQUFLeEIsUUFBTCxDQUFjeUIsZ0JBQWQsRUFBM0U7QUFDRCxHOzs7OztrQkFuRmtCNUIsaUIiLCJmaWxlIjoiRGVsZWdhdGVPcGVyYXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUXVlcnlCdWlsZGVyT3BlcmF0aW9uIGZyb20gJy4vUXVlcnlCdWlsZGVyT3BlcmF0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGVsZWdhdGVPcGVyYXRpb24gZXh0ZW5kcyBRdWVyeUJ1aWxkZXJPcGVyYXRpb24ge1xuXG4gIGNvbnN0cnVjdG9yKG5hbWUsIG9wdCkge1xuICAgIHN1cGVyKG5hbWUsIG9wdCk7XG5cbiAgICB0aGlzLmRlbGVnYXRlID0gb3B0LmRlbGVnYXRlO1xuICAgIHRoaXMuaXNXcml0ZU9wZXJhdGlvbiA9IHRoaXMuZGVsZWdhdGUuaXNXcml0ZU9wZXJhdGlvbjtcbiAgfVxuXG4gIGNhbGwoYnVpbGRlciwgYXJncykge1xuICAgIHJldHVybiB0aGlzLmRlbGVnYXRlLmNhbGwoYnVpbGRlciwgYXJncyk7XG4gIH1cblxuICBvbkJlZm9yZShidWlsZGVyLCByZXN1bHQpIHtcbiAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZS5vbkJlZm9yZShidWlsZGVyLCByZXN1bHQpO1xuICB9XG5cbiAgaGFzT25CZWZvcmUoKSB7XG4gICAgcmV0dXJuIHRoaXMub25CZWZvcmUgIT09IERlbGVnYXRlT3BlcmF0aW9uLnByb3RvdHlwZS5vbkJlZm9yZSB8fCB0aGlzLmRlbGVnYXRlLmhhc09uQmVmb3JlKCk7XG4gIH1cblxuICBvbkJlZm9yZUludGVybmFsKGJ1aWxkZXIsIHJlc3VsdCkge1xuICAgIHJldHVybiB0aGlzLmRlbGVnYXRlLm9uQmVmb3JlSW50ZXJuYWwoYnVpbGRlciwgcmVzdWx0KTtcbiAgfVxuXG4gIGhhc09uQmVmb3JlSW50ZXJuYWwoKSB7XG4gICAgcmV0dXJuIHRoaXMub25CZWZvcmVJbnRlcm5hbCAhPT0gRGVsZWdhdGVPcGVyYXRpb24ucHJvdG90eXBlLm9uQmVmb3JlSW50ZXJuYWwgfHwgdGhpcy5kZWxlZ2F0ZS5oYXNPbkJlZm9yZUludGVybmFsKCk7XG4gIH1cblxuICBvbkJlZm9yZUJ1aWxkKGJ1aWxkZXIpIHtcbiAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZS5vbkJlZm9yZUJ1aWxkKGJ1aWxkZXIpO1xuICB9XG5cbiAgaGFzT25CZWZvcmVCdWlsZCgpIHtcbiAgICByZXR1cm4gdGhpcy5vbkJlZm9yZUJ1aWxkICE9PSBEZWxlZ2F0ZU9wZXJhdGlvbi5wcm90b3R5cGUub25CZWZvcmVCdWlsZCB8fCB0aGlzLmRlbGVnYXRlLmhhc09uQmVmb3JlQnVpbGQoKTtcbiAgfVxuXG4gIG9uQnVpbGQoa25leEJ1aWxkZXIsIGJ1aWxkZXIpIHtcbiAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZS5vbkJ1aWxkKGtuZXhCdWlsZGVyLCBidWlsZGVyKTtcbiAgfVxuXG4gIGhhc09uQnVpbGQoKSB7XG4gICAgcmV0dXJuIHRoaXMub25CdWlsZCAhPT0gRGVsZWdhdGVPcGVyYXRpb24ucHJvdG90eXBlLm9uQnVpbGQgfHwgdGhpcy5kZWxlZ2F0ZS5oYXNPbkJ1aWxkKCk7XG4gIH1cblxuICBvblJhd1Jlc3VsdChidWlsZGVyLCByZXN1bHQpIHtcbiAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZS5vblJhd1Jlc3VsdChidWlsZGVyLCByZXN1bHQpO1xuICB9XG5cbiAgaGFzT25SYXdSZXN1bHQoKSB7XG4gICAgcmV0dXJuIHRoaXMub25SYXdSZXN1bHQgIT09IERlbGVnYXRlT3BlcmF0aW9uLnByb3RvdHlwZS5vblJhd1Jlc3VsdCB8fCB0aGlzLmRlbGVnYXRlLmhhc09uUmF3UmVzdWx0KCk7XG4gIH1cblxuICBvbkFmdGVyUXVlcnkoYnVpbGRlciwgcmVzdWx0KSB7XG4gICAgcmV0dXJuIHRoaXMuZGVsZWdhdGUub25BZnRlclF1ZXJ5KGJ1aWxkZXIsIHJlc3VsdCk7XG4gIH1cblxuICBoYXNPbkFmdGVyUXVlcnkoKSB7XG4gICAgcmV0dXJuIHRoaXMub25BZnRlclF1ZXJ5ICE9PSBEZWxlZ2F0ZU9wZXJhdGlvbi5wcm90b3R5cGUub25BZnRlclF1ZXJ5IHx8IHRoaXMuZGVsZWdhdGUuaGFzT25BZnRlclF1ZXJ5KCk7XG4gIH1cblxuICBvbkFmdGVySW50ZXJuYWwoYnVpbGRlciwgcmVzdWx0KSB7XG4gICAgcmV0dXJuIHRoaXMuZGVsZWdhdGUub25BZnRlckludGVybmFsKGJ1aWxkZXIsIHJlc3VsdCk7XG4gIH1cblxuICBoYXNPbkFmdGVySW50ZXJuYWwoKSB7XG4gICAgcmV0dXJuIHRoaXMub25BZnRlckludGVybmFsICE9PSBEZWxlZ2F0ZU9wZXJhdGlvbi5wcm90b3R5cGUub25BZnRlckludGVybmFsIHx8IHRoaXMuZGVsZWdhdGUuaGFzT25BZnRlckludGVybmFsKCk7XG4gIH1cblxuICBvbkFmdGVyKGJ1aWxkZXIsIHJlc3VsdCkge1xuICAgIHJldHVybiB0aGlzLmRlbGVnYXRlLm9uQWZ0ZXIoYnVpbGRlciwgcmVzdWx0KTtcbiAgfVxuXG4gIGhhc09uQWZ0ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMub25BZnRlciAhPT0gRGVsZWdhdGVPcGVyYXRpb24ucHJvdG90eXBlLm9uQWZ0ZXIgfHwgdGhpcy5kZWxlZ2F0ZS5oYXNPbkFmdGVyKCk7XG4gIH1cblxuICBxdWVyeUV4ZWN1dG9yKGJ1aWxkZXIpIHtcbiAgICByZXR1cm4gdGhpcy5kZWxlZ2F0ZS5xdWVyeUV4ZWN1dG9yKGJ1aWxkZXIpO1xuICB9XG5cbiAgaGFzUXVlcnlFeGVjdXRvcigpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeUV4ZWN1dG9yICE9PSBEZWxlZ2F0ZU9wZXJhdGlvbi5wcm90b3R5cGUucXVlcnlFeGVjdXRvciB8fCB0aGlzLmRlbGVnYXRlLmhhc1F1ZXJ5RXhlY3V0b3IoKTtcbiAgfVxufSJdfQ==