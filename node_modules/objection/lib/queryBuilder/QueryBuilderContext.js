'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _QueryBuilderContextBase = require('./QueryBuilderContextBase');

var _QueryBuilderContextBase2 = _interopRequireDefault(_QueryBuilderContextBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var QueryBuilderContext = function (_QueryBuilderContextB) {
  (0, _inherits3.default)(QueryBuilderContext, _QueryBuilderContextB);

  function QueryBuilderContext() {
    (0, _classCallCheck3.default)(this, QueryBuilderContext);

    var _this = (0, _possibleConstructorReturn3.default)(this, _QueryBuilderContextB.call(this));

    _this.runBefore = [];
    _this.runAfter = [];
    _this.onBuild = [];
    return _this;
  }

  QueryBuilderContext.prototype.clone = function clone() {
    var ctx = _QueryBuilderContextB.prototype.clone.call(this);

    ctx.runBefore = this.runBefore.slice();
    ctx.runAfter = this.runAfter.slice();
    ctx.onBuild = this.onBuild.slice();

    return ctx;
  };

  return QueryBuilderContext;
}(_QueryBuilderContextBase2.default);

exports.default = QueryBuilderContext;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlF1ZXJ5QnVpbGRlckNvbnRleHQuanMiXSwibmFtZXMiOlsiUXVlcnlCdWlsZGVyQ29udGV4dCIsInJ1bkJlZm9yZSIsInJ1bkFmdGVyIiwib25CdWlsZCIsImNsb25lIiwiY3R4Iiwic2xpY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7O0lBRXFCQSxtQjs7O0FBRW5CLGlDQUFjO0FBQUE7O0FBQUEsK0RBQ1osZ0NBRFk7O0FBR1osVUFBS0MsU0FBTCxHQUFpQixFQUFqQjtBQUNBLFVBQUtDLFFBQUwsR0FBZ0IsRUFBaEI7QUFDQSxVQUFLQyxPQUFMLEdBQWUsRUFBZjtBQUxZO0FBTWI7O2dDQUVEQyxLLG9CQUFRO0FBQ04sUUFBSUMsTUFBTSxnQ0FBTUQsS0FBTixXQUFWOztBQUVBQyxRQUFJSixTQUFKLEdBQWdCLEtBQUtBLFNBQUwsQ0FBZUssS0FBZixFQUFoQjtBQUNBRCxRQUFJSCxRQUFKLEdBQWUsS0FBS0EsUUFBTCxDQUFjSSxLQUFkLEVBQWY7QUFDQUQsUUFBSUYsT0FBSixHQUFjLEtBQUtBLE9BQUwsQ0FBYUcsS0FBYixFQUFkOztBQUVBLFdBQU9ELEdBQVA7QUFDRCxHOzs7OztrQkFsQmtCTCxtQiIsImZpbGUiOiJRdWVyeUJ1aWxkZXJDb250ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFF1ZXJ5QnVpbGRlckNvbnRleHRCYXNlIGZyb20gJy4vUXVlcnlCdWlsZGVyQ29udGV4dEJhc2UnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRdWVyeUJ1aWxkZXJDb250ZXh0IGV4dGVuZHMgUXVlcnlCdWlsZGVyQ29udGV4dEJhc2Uge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLnJ1bkJlZm9yZSA9IFtdO1xuICAgIHRoaXMucnVuQWZ0ZXIgPSBbXTtcbiAgICB0aGlzLm9uQnVpbGQgPSBbXTtcbiAgfVxuXG4gIGNsb25lKCkge1xuICAgIGxldCBjdHggPSBzdXBlci5jbG9uZSgpO1xuXG4gICAgY3R4LnJ1bkJlZm9yZSA9IHRoaXMucnVuQmVmb3JlLnNsaWNlKCk7XG4gICAgY3R4LnJ1bkFmdGVyID0gdGhpcy5ydW5BZnRlci5zbGljZSgpO1xuICAgIGN0eC5vbkJ1aWxkID0gdGhpcy5vbkJ1aWxkLnNsaWNlKCk7XG5cbiAgICByZXR1cm4gY3R4O1xuICB9XG59Il19